/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    p
    {
        solver          GAMG;
        smoother        GaussSeidel;
        tolerance       1e-7;
        relTol          0.01;
    }

    Phi
    {
        $p;
    }

    U
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-9;
        relTol          0.1;
        nSweeps         1;
    }

    k
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-9;
        relTol          0.1;
        nSweeps         1;
    }

    omega
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-9;
        relTol          0.1;
        nSweeps         1;
    }

    pFinal
    {
        $p;
        relTol          0;
    };
}

SIMPLE
{
    nNonOrthogonalCorrectors 3;
    consistent yes;
    pRefPoint        (-1 0 0);
    pRefValue       0;

    residualControl
    {
        p               1e-6;
        U               1e-5;
        k         	    1e-5;
        omega         	1e-5;
    }
}

relaxationFactors
{
    equations
    {
        U               0.7;
        k         	    0.7;
        omega         	0.7;
    }
}

PISO
{
    nNonOrthogonalCorrectors 2;
    momentumPredictor yes;
    nCorrectors     2;
    pRefPoint        (-1 0 0);
    pRefValue       0;
}

/*
SIMPLE
{
    nNonOrthogonalCorrectors 0;
    consistent yes;
}
*/

potentialFlow
{
    nNonOrthogonalCorrectors 10;
    PhiRefPoint  (2 0.05 1);
    PhiRefValue 0;	
}


cache
{
    grad(U);
}
// ************************************************************************* //
